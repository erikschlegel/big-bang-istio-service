apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "service.labels" . | nindent 4 }}
  name: {{ include "service.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: "{{ .Values.image.repository }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Chart.Name }}
        ports:
        - containerPort: {{ .Values.service.port }}
          protocol: TCP
          name: http
        {{- if .Values.secretStore.enabled }}
        volumeMounts:
          - name: {{ include "service.fullname" . }}
            mountPath: "/mnt/secret-store"
            readOnly: true
        env:
        {{- range $secret := .Values.secretStore.secrets }}
          - name: {{ $secret.envName }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret.alias }}
                key: {{ $secret.alias }}
        {{ end }}
        {{ end }}
        {{- if .Values.image.includeReadinessProbe }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.service.port }}
          initialDelaySeconds: 2
          periodSeconds: 2
        {{ end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      restartPolicy: Always
      {{- if .Values.secretStore.enabled }}
      volumes:
        - name: {{ include "service.fullname" . }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ include "service.fullname" . }}
      {{- end }}